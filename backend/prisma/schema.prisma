// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  username  String      @unique
  password  String
  BookLikes BookLikes[]

  ShopCart  ShopCart[]
  Order     Order[]
  Comment   Comment[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt

  @@map("users")
}

model Book {
  id        Int         @id @default(autoincrement())
  title     String
  desc      String?
  img       String
  catagory  String
  price     Int
  BookLikes BookLikes[]
  Comment   Comment[]
  CartItem  CartItem[]
  OrderItem OrderItem[]


  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  @@map("book")
}

model BookLikes {
  id     Int  @id @default(autoincrement())
  book   Book @relation(fields: [bookId], references: [id])
  user   User @relation(fields: [userId], references: [id])
  bookId Int
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("tweet_likes")
}

model ShopCart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  total     Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  CartItem  CartItem[]
}

model CartItem {
  id         Int      @id @default(autoincrement())
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
  shopcart   ShopCart @relation(fields: [shopcartId], references: [id])
  shopcartId Int
  qty        Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  total     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  OrderItem OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  qty       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
